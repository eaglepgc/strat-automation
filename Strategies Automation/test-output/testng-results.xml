<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="17" passed="17">
  <reporter-output>
  </reporter-output>
  <suite name="Parallel Strat Regres" duration-ms="183036" started-at="2018-03-26T14:02:48Z" finished-at="2018-03-26T14:05:51Z">
    <groups>
    </groups>
    <test name="Chrome test" duration-ms="183036" started-at="2018-03-26T14:02:48Z" finished-at="2018-03-26T14:05:51Z">
      <class name="strat_regresion_test.Add_New_Priorities">
        <test-method status="PASS" signature="test()[pri:0, instance:strat_regresion_test.Add_New_Priorities@6a4f787b]" name="test" duration-ms="11879" started-at="2018-03-26T10:03:40Z" finished-at="2018-03-26T10:03:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:strat_regresion_test.Add_New_Priorities@6a4f787b]" name="getResult" is-config="true" duration-ms="0" started-at="2018-03-26T10:03:52Z" finished-at="2018-03-26T10:03:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test status=SUCCESS method=Add_New_Priorities.test()[pri:0, instance:strat_regresion_test.Add_New_Priorities@6a4f787b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- strat_regresion_test.Add_New_Priorities -->
      <class name="strat_regresion_test.Institution_Selector_Cobb">
        <test-method status="PASS" signature="institution_selector_cobb()[pri:0, instance:strat_regresion_test.Institution_Selector_Cobb@1bce4f0a]" name="institution_selector_cobb" duration-ms="2855" started-at="2018-03-26T10:03:12Z" finished-at="2018-03-26T10:03:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- institution_selector_cobb -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:strat_regresion_test.Institution_Selector_Cobb@1bce4f0a]" name="getResult" is-config="true" duration-ms="1" started-at="2018-03-26T10:03:15Z" finished-at="2018-03-26T10:03:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=institution_selector_cobb status=SUCCESS method=Institution_Selector_Cobb.institution_selector_cobb()[pri:0, instance:strat_regresion_test.Institution_Selector_Cobb@1bce4f0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- strat_regresion_test.Institution_Selector_Cobb -->
      <class name="strat_regresion_test.Delete_Priority">
        <test-method status="PASS" signature="test()[pri:0, instance:strat_regresion_test.Delete_Priority@6a41eaa2]" name="test" duration-ms="3115" started-at="2018-03-26T10:04:04Z" finished-at="2018-03-26T10:04:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:strat_regresion_test.Delete_Priority@6a41eaa2]" name="getResult" is-config="true" duration-ms="1" started-at="2018-03-26T10:04:07Z" finished-at="2018-03-26T10:04:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test status=SUCCESS method=Delete_Priority.test()[pri:0, instance:strat_regresion_test.Delete_Priority@6a41eaa2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- strat_regresion_test.Delete_Priority -->
      <class name="strat_regresion_test.Add_User">
        <test-method status="PASS" signature="test()[pri:0, instance:strat_regresion_test.Add_User@4883b407]" name="test" duration-ms="19071" started-at="2018-03-26T10:05:11Z" finished-at="2018-03-26T10:05:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:strat_regresion_test.Add_User@4883b407]" name="getResult" is-config="true" duration-ms="0" started-at="2018-03-26T10:05:30Z" finished-at="2018-03-26T10:05:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test status=SUCCESS method=Add_User.test()[pri:0, instance:strat_regresion_test.Add_User@4883b407] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- strat_regresion_test.Add_User -->
      <class name="strat_regresion_test.Envisioning">
        <test-method status="PASS" signature="doubleClickOnStrat()[pri:0, instance:strat_regresion_test.Envisioning@5e3a8624]" name="doubleClickOnStrat" duration-ms="3279" started-at="2018-03-26T10:03:15Z" finished-at="2018-03-26T10:03:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doubleClickOnStrat -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:strat_regresion_test.Envisioning@5e3a8624]" name="getResult" is-config="true" duration-ms="0" started-at="2018-03-26T10:03:18Z" finished-at="2018-03-26T10:03:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=doubleClickOnStrat status=SUCCESS method=Envisioning.doubleClickOnStrat()[pri:0, instance:strat_regresion_test.Envisioning@5e3a8624] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- strat_regresion_test.Envisioning -->
      <class name="strat_regresion_test.AddPurpose">
        <test-method status="PASS" signature="addPurpose()[pri:0, instance:strat_regresion_test.AddPurpose@5c3bd550]" name="addPurpose" duration-ms="7301" started-at="2018-03-26T10:03:18Z" finished-at="2018-03-26T10:03:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addPurpose -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:strat_regresion_test.AddPurpose@5c3bd550]" name="getResult" is-config="true" duration-ms="0" started-at="2018-03-26T10:03:25Z" finished-at="2018-03-26T10:03:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addPurpose status=SUCCESS method=AddPurpose.addPurpose()[pri:0, instance:strat_regresion_test.AddPurpose@5c3bd550] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- strat_regresion_test.AddPurpose -->
      <class name="strat_regresion_test.Dashboard_regresion">
        <test-method status="PASS" signature="NewStrategy()[pri:0, instance:strat_regresion_test.Dashboard_regresion@6093dd95]" name="NewStrategy" duration-ms="55645" started-at="2018-03-26T10:04:11Z" finished-at="2018-03-26T10:05:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NewStrategy -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:strat_regresion_test.Dashboard_regresion@6093dd95]" name="getResult" is-config="true" duration-ms="1" started-at="2018-03-26T10:05:07Z" finished-at="2018-03-26T10:05:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=NewStrategy status=SUCCESS method=Dashboard_regresion.NewStrategy()[pri:0, instance:strat_regresion_test.Dashboard_regresion@6093dd95] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- strat_regresion_test.Dashboard_regresion -->
      <class name="strat_regresion_test.Edit_Priority">
        <test-method status="PASS" signature="test()[pri:0, instance:strat_regresion_test.Edit_Priority@685cb137]" name="test" duration-ms="11836" started-at="2018-03-26T10:03:52Z" finished-at="2018-03-26T10:04:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:strat_regresion_test.Edit_Priority@685cb137]" name="getResult" is-config="true" duration-ms="1" started-at="2018-03-26T10:04:04Z" finished-at="2018-03-26T10:04:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test status=SUCCESS method=Edit_Priority.test()[pri:0, instance:strat_regresion_test.Edit_Priority@685cb137] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- strat_regresion_test.Edit_Priority -->
      <class name="strat_regresion_test.Removing_User">
        <test-method status="PASS" signature="test()[pri:0, instance:strat_regresion_test.Removing_User@7d9d1a19]" name="test" duration-ms="18369" started-at="2018-03-26T10:05:30Z" finished-at="2018-03-26T10:05:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:strat_regresion_test.Removing_User@7d9d1a19]" name="getResult" is-config="true" duration-ms="0" started-at="2018-03-26T10:05:49Z" finished-at="2018-03-26T10:05:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test status=SUCCESS method=Removing_User.test()[pri:0, instance:strat_regresion_test.Removing_User@7d9d1a19] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- strat_regresion_test.Removing_User -->
      <class name="strat_regresion_test.Nav_ManageUsers">
        <test-method status="PASS" signature="manageusers()[pri:0, instance:strat_regresion_test.Nav_ManageUsers@5622fdf]" name="manageusers" duration-ms="4306" started-at="2018-03-26T10:05:07Z" finished-at="2018-03-26T10:05:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- manageusers -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:strat_regresion_test.Nav_ManageUsers@5622fdf]" name="getResult" is-config="true" duration-ms="1" started-at="2018-03-26T10:05:11Z" finished-at="2018-03-26T10:05:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=manageusers status=SUCCESS method=Nav_ManageUsers.manageusers()[pri:0, instance:strat_regresion_test.Nav_ManageUsers@5622fdf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- strat_regresion_test.Nav_ManageUsers -->
      <class name="strat_regresion_test.RequestPassword">
        <test-method status="PASS" signature="setUp(java.lang.String)[pri:0, instance:strat_regresion_test.RequestPassword@42d80b78]" name="setUp" is-config="true" duration-ms="4581" started-at="2018-03-26T10:02:43Z" finished-at="2018-03-26T10:02:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startReport()[pri:0, instance:strat_regresion_test.RequestPassword@42d80b78]" name="startReport" is-config="true" duration-ms="101" started-at="2018-03-26T10:02:48Z" finished-at="2018-03-26T10:02:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method status="PASS" signature="requestPassword()[pri:0, instance:strat_regresion_test.RequestPassword@42d80b78]" name="requestPassword" duration-ms="17724" started-at="2018-03-26T10:02:48Z" finished-at="2018-03-26T10:03:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- requestPassword -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:strat_regresion_test.RequestPassword@42d80b78]" name="getResult" is-config="true" duration-ms="8" started-at="2018-03-26T10:03:06Z" finished-at="2018-03-26T10:03:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=requestPassword status=SUCCESS method=RequestPassword.requestPassword()[pri:0, instance:strat_regresion_test.RequestPassword@42d80b78] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:strat_regresion_test.RequestPassword@42d80b78]" name="endReport" is-config="true" duration-ms="967" started-at="2018-03-26T10:05:51Z" finished-at="2018-03-26T10:05:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- strat_regresion_test.RequestPassword -->
      <class name="strat_regresion_test.Work_Complete">
        <test-method status="PASS" signature="test()[pri:0, instance:strat_regresion_test.Work_Complete@7cd62f43]" name="test" duration-ms="202" started-at="2018-03-26T10:04:07Z" finished-at="2018-03-26T10:04:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:strat_regresion_test.Work_Complete@7cd62f43]" name="getResult" is-config="true" duration-ms="0" started-at="2018-03-26T10:04:07Z" finished-at="2018-03-26T10:04:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test status=SUCCESS method=Work_Complete.test()[pri:0, instance:strat_regresion_test.Work_Complete@7cd62f43] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- strat_regresion_test.Work_Complete -->
      <class name="base.Logout">
        <test-method status="PASS" signature="test()[pri:0, instance:base.Logout@39c0f4a]" name="test" duration-ms="2263" started-at="2018-03-26T10:05:49Z" finished-at="2018-03-26T10:05:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:base.Logout@39c0f4a]" name="getResult" is-config="true" duration-ms="0" started-at="2018-03-26T10:05:51Z" finished-at="2018-03-26T10:05:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test status=SUCCESS method=Logout.test()[pri:0, instance:base.Logout@39c0f4a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- base.Logout -->
      <class name="strat_regresion_test.AddBeliefs">
        <test-method status="PASS" signature="addPurpose()[pri:0, instance:strat_regresion_test.AddBeliefs@604ed9f0]" name="addPurpose" duration-ms="7249" started-at="2018-03-26T10:03:33Z" finished-at="2018-03-26T10:03:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addPurpose -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:strat_regresion_test.AddBeliefs@604ed9f0]" name="getResult" is-config="true" duration-ms="0" started-at="2018-03-26T10:03:40Z" finished-at="2018-03-26T10:03:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addPurpose status=SUCCESS method=AddBeliefs.addPurpose()[pri:0, instance:strat_regresion_test.AddBeliefs@604ed9f0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- strat_regresion_test.AddBeliefs -->
      <class name="strat_regresion_test.Nav_Dashboard">
        <test-method status="PASS" signature="mystrategies()[pri:0, instance:strat_regresion_test.Nav_Dashboard@6d4b1c02]" name="mystrategies" duration-ms="4184" started-at="2018-03-26T10:04:07Z" finished-at="2018-03-26T10:04:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mystrategies -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:strat_regresion_test.Nav_Dashboard@6d4b1c02]" name="getResult" is-config="true" duration-ms="0" started-at="2018-03-26T10:04:11Z" finished-at="2018-03-26T10:04:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mystrategies status=SUCCESS method=Nav_Dashboard.mystrategies()[pri:0, instance:strat_regresion_test.Nav_Dashboard@6d4b1c02] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- strat_regresion_test.Nav_Dashboard -->
      <class name="strat_regresion_test.Login">
        <test-method status="PASS" signature="login()[pri:0, instance:strat_regresion_test.Login@3bfdc050]" name="login" duration-ms="6454" started-at="2018-03-26T10:03:06Z" finished-at="2018-03-26T10:03:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:strat_regresion_test.Login@3bfdc050]" name="getResult" is-config="true" duration-ms="1" started-at="2018-03-26T10:03:12Z" finished-at="2018-03-26T10:03:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login status=SUCCESS method=Login.login()[pri:0, instance:strat_regresion_test.Login@3bfdc050] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- strat_regresion_test.Login -->
      <class name="strat_regresion_test.AddMission">
        <test-method status="PASS" signature="addPurpose()[pri:0, instance:strat_regresion_test.AddMission@91161c7]" name="addPurpose" duration-ms="7256" started-at="2018-03-26T10:03:25Z" finished-at="2018-03-26T10:03:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addPurpose -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:strat_regresion_test.AddMission@91161c7]" name="getResult" is-config="true" duration-ms="1" started-at="2018-03-26T10:03:33Z" finished-at="2018-03-26T10:03:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addPurpose status=SUCCESS method=AddMission.addPurpose()[pri:0, instance:strat_regresion_test.AddMission@91161c7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- strat_regresion_test.AddMission -->
    </test> <!-- Chrome test -->
  </suite> <!-- Parallel Strat Regres -->
</testng-results>
