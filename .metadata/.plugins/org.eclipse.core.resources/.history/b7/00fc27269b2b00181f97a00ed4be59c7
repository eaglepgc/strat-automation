package strat_regresion_test;

import java.io.File;

import org.openqa.selenium.By;
import org.testng.Assert;
import org.testng.ITestResult;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;

import com.aventstack.extentreports.ExtentReports;
import com.aventstack.extentreports.ExtentTest;
import com.aventstack.extentreports.Status;
import com.aventstack.extentreports.markuputils.ExtentColor;
import com.aventstack.extentreports.markuputils.MarkupHelper;
import com.aventstack.extentreports.reporter.ExtentHtmlReporter;
import com.aventstack.extentreports.reporter.configuration.ChartLocation;
import com.aventstack.extentreports.reporter.configuration.Theme;

import base.Before_and_After_Suite;

public class RequestPassword extends Before_and_After_Suite
{
//public class RequestPassword extends Chrome_Only{
	ExtentHtmlReporter htmlReporter;
	ExtentReports extent;
	ExtentTest test;
	
	@BeforeTest
	public void startReport()
	{
		htmlReporter = new ExtentHtmlReporter(System.getProperty("user.dir") +"/test-output/STMExtentReport.html");
		extent = new ExtentReports();
		extent.attachReporter(htmlReporter);
		extent.setSystemInfo("Auto Testing", "Request Password");
		extent.setSystemInfo("Environment", "Dev");
		extent.setSystemInfo("User Name", "Stephen Jones");
		
		 htmlReporter.config().setDocumentTitle("Title of the Report Comes here");
		 htmlReporter.config().setReportName("Name of the Report Comes here");
		 htmlReporter.config().setTestViewChartLocation(ChartLocation.TOP);
		 htmlReporter.config().setTheme(Theme.STANDARD);		
	
}
  @Test
  public void requestPassword() throws InterruptedException { 
	  
	  //Click Request Password
	  test = extent.createTest("requestPassword","Request Password flow");
	  Thread.sleep(5000); // Let the user actually see something!
	  driver.findElement(By.linkText("Request Password")).click();
	  Thread.sleep(2000); // Let the user actually see something!
	  driver.findElement(By.name("email")).sendKeys("strat-change-PW@yopmail.com");
	  driver.findElement(By.className("auth-btn")).click();
	  Thread.sleep(10000); // Let the user actually see something!
	  Assert.assertTrue(driver.getPageSource().contains("Didn't receive an email?"));
	  driver.get("http://devstrategies.advanc-ed.org:8113/");
	  //logger.log(LogStatus.PASS, "Test Case Passed is requestPassword");
	  test.log(Status.PASS, "Test Case (failTest) Status is passed");
	  test.log(Status.PASS, MarkupHelper.createLabel("Test Case (failTest) Status is passed", ExtentColor.GREEN));


  }
  
  @AfterMethod
  public void getReport(ITestResult result){
	  if(result.getStatus() == ITestResult.FAILURE){
		  //logger.log(Status.FAIL, "Test Case Failed is "+result.getName());
		  //MarkupHelper is used to display the output in different colors
		  logger.log(Status.FAIL, MarkupHelper.createLabel(result.getName() + " - Test Case Failed", ExtentColor.RED));
		  logger.log(Status.FAIL, MarkupHelper.createLabel(result.getThrowable() + " - Test Case Failed", ExtentColor.RED));
		  }else if(result.getStatus() == ITestResult.SKIP){
		  //logger.log(Status.SKIP, "Test Case Skipped is "+result.getName());
		  logger.log(Status.SKIP, MarkupHelper.createLabel(result.getName() + " - Test Case Skipped", ExtentColor.ORANGE)); 
		  }
  
  
	@AfterTest
	public void endReport(){
		extent.flush();
		extent.close();

		
  }
  
}
